(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{427:function(t,e,s){"use strict";s.r(e);var v=s(22),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nodejs的网络编程能力"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs的网络编程能力"}},[t._v("#")]),t._v(" Nodejs的网络编程能力")]),t._v(" "),s("h4",{attrs:{id:"网络模型-osi-tcp-ip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络模型-osi-tcp-ip"}},[t._v("#")]),t._v(" 网络模型 OSI & TCP/IP")]),t._v(" "),s("h4",{attrs:{id:"socket-套接字-快递盒-插座"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#socket-套接字-快递盒-插座"}},[t._v("#")]),t._v(" Socket? 套接字？ 快递盒？？？ 插座")]),t._v(" "),s("ul",[s("li",[t._v("实现底层通信，几乎所有的应用层都是通过 socket 进行通信")]),t._v(" "),s("li",[t._v("对 TCP/IP 协议进行封装，向应用层协议暴露接口调用")]),t._v(" "),s("li",[t._v("TCP/IP协议族中，传输层存在两种协议：TCP、UDP")]),t._v(" "),s("li",[t._v("两种协议不同，因为不同的参数的socket 实现过程也不一样")])]),t._v(" "),s("h4",{attrs:{id:"nodejs网络基础模块-net-dgram"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs网络基础模块-net-dgram"}},[t._v("#")]),t._v(" Nodejs网络基础模块 - net/dgram")]),t._v(" "),s("ul",[s("li",[t._v("net 模块是TCP/IP的Node实现，提供了一些用于底层的网络通信的小工具")]),t._v(" "),s("li",[t._v("http.Server 继承自 net.Server")]),t._v(" "),s("li",[t._v("http客户端与http服务端的通信均依赖于 socket (net.Socket)\n"),s("ul",[s("li",[t._v("net.Server: TCP server，内部通过socket来实现与客户端的通信")]),t._v(" "),s("li",[t._v("net.Socket: 本地socket 的 node 版实现，它实现了全双工的stream 接口")])])])]),t._v(" "),s("h4",{attrs:{id:"net-socket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#net-socket"}},[t._v("#")]),t._v(" net.Socket")]),t._v(" "),s("ul",[s("li",[t._v("net.Socket对象时TCP或UNIX Socket 的抽象")]),t._v(" "),s("li",[t._v("net.Socket实例实现了一个双工流接口")]),t._v(" "),s("li",[t._v("API归纳\n"),s("ul",[s("li",[t._v("连接相关connect")]),t._v(" "),s("li",[t._v("数据读写 write")]),t._v(" "),s("li",[t._v("数据属性 bufferSize")]),t._v(" "),s("li",[t._v("地址相关 address")])])])]),t._v(" "),s("h4",{attrs:{id:"动手写一个案例感受一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动手写一个案例感受一下"}},[t._v("#")]),t._v(" 动手写一个案例感受一下")]),t._v(" "),s("ul",[s("li",[t._v("服务器A启动服务，等待连接")]),t._v(" "),s("li",[t._v("基于事件驱动，服务器B访问服务器A提供的服务")]),t._v(" "),s("li",[t._v("关闭数据请求，结束服务")])]),t._v(" "),s("h4",{attrs:{id:"nodejs的网络编程-http-https-http2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs的网络编程-http-https-http2"}},[t._v("#")]),t._v(" Nodejs的网络编程-http/https/http2")]),t._v(" "),s("ul",[s("li",[t._v("HTTP模块是Node的门脸，是编写 Web Server 最常见的模块")]),t._v(" "),s("li",[t._v("Server 部分继承自net.Server，并对请求和响应数据进行了封装")]),t._v(" "),s("li",[t._v("也提供了request/get 的能力，允许向其他服务器端发起HTTP请求")]),t._v(" "),s("li",[t._v("Node封装了HTTPS/HTTP2的实现，可以轻松创建HTTP服务")])])])}),[],!1,null,null,null);e.default=r.exports}}]);