(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{426:function(_,v,l){"use strict";l.r(v);var i=l(22),e=Object(i.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h1",{attrs:{id:"node的模块机制以及原理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#node的模块机制以及原理"}},[_._v("#")]),_._v(" Node的模块机制以及原理")]),_._v(" "),l("h4",{attrs:{id:"commonjs"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[_._v("#")]),_._v(" CommonJS")]),_._v(" "),l("ul",[l("li",[_._v("模块引用")])]),_._v(" "),l("p",[_._v("通过require(module)来引入module")]),_._v(" "),l("ul",[l("li",[_._v("模块定义")])]),_._v(" "),l("p",[_._v("通过挂载在module.exports对象上实现定义")]),_._v(" "),l("ul",[l("li",[_._v("模块标识")])]),_._v(" "),l("p",[_._v("通过路径标识引入的是哪个模块")]),_._v(" "),l("h4",{attrs:{id:"nodejs的模块机制-node的实现"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#nodejs的模块机制-node的实现"}},[_._v("#")]),_._v(" Nodejs的模块机制 - Node的实现")]),_._v(" "),l("p",[_._v("路径分析 -> 文件定位 -> 编译执行 -> 加入缓存")]),_._v(" "),l("h4",{attrs:{id:"路径分析"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#路径分析"}},[_._v("#")]),_._v(" 路径分析")]),_._v(" "),l("ul",[l("li",[_._v("内置模块\n"),l("ul",[l("li",[_._v("在Node进程开始的时候就开始预加载了")]),_._v(" "),l("li",[_._v("加载的是二进制文件，无需定位和编译")])])]),_._v(" "),l("li",[_._v("文件模块\n"),l("ul",[l("li",[_._v("通过NPM安装到第三方模块")]),_._v(" "),l("li",[_._v("本地模块")])])]),_._v(" "),l("li",[_._v("模块内容\n"),l("ul",[l("li",[_._v("函数、对象或者属性，如函数、数组甚至任意类型的JS对象")])])])]),_._v(" "),l("h4",{attrs:{id:"模块加载的优先级"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#模块加载的优先级"}},[_._v("#")]),_._v(" 模块加载的优先级")]),_._v(" "),l("ol",[l("li",[_._v("已缓存模块")]),_._v(" "),l("li",[_._v("内置模块")]),_._v(" "),l("li",[_._v("文件模块")]),_._v(" "),l("li",[_._v("文件目录模块")]),_._v(" "),l("li",[_._v("node_modules模块")])]),_._v(" "),l("h4",{attrs:{id:"模块文件定位"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#模块文件定位"}},[_._v("#")]),_._v(" 模块文件定位")]),_._v(" "),l("ol",[l("li",[_._v("拓展名判断\n"),l("ol",[l("li",[_._v(".js文件")]),_._v(" "),l("li",[_._v(".json文件")]),_._v(" "),l("li",[_._v(".node文件")])])]),_._v(" "),l("li",[_._v("解析package.json\n"),l("ol",[l("li",[_._v("解析为对象")]),_._v(" "),l("li",[_._v("读取main指定的路径")])])]),_._v(" "),l("li",[_._v("查找入口文件\n"),l("ol",[l("li",[_._v("将 index 作为默认值")]),_._v(" "),l("li",[_._v("查看index.js")]),_._v(" "),l("li",[_._v("index.json")]),_._v(" "),l("li",[_._v("index.node")])])]),_._v(" "),l("li",[_._v("进入下一个模块路径\n"),l("ol",[l("li",[_._v("在父目录中重复以上步骤")]),_._v(" "),l("li",[_._v("轮询后依旧失败则报错")])])])]),_._v(" "),l("h4",{attrs:{id:"模块编译执行"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#模块编译执行"}},[_._v("#")]),_._v(" 模块编译执行")]),_._v(" "),l("ul",[l("li",[_._v(".js 文件")]),_._v(" "),l("li",[_._v("通过fs模块同步读取后编译执行，未识别类型也会当做js处理")]),_._v(" "),l("li",[_._v(".json文件：")]),_._v(" "),l("li",[_._v("通过fs模块同步读取后，用JSON.parse() 解析并返回结果")]),_._v(" "),l("li",[_._v(".node文件：")]),_._v(" "),l("li",[_._v("这是用 C/C++ 写的拓展文件，通过process.dlopen 方法加载最后编译生成的")])]),_._v(" "),l("h4",{attrs:{id:"模块js文件的编译"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#模块js文件的编译"}},[_._v("#")]),_._v(" 模块js文件的编译")]),_._v(" "),l("ul",[l("li",[_._v("注入全局变量\n"),l("ul",[l("li",[_._v("以参数形式，注入module/exports/require 方法")]),_._v(" "),l("li",[_._v("同时注入注入路径解析时得到的 __filename/ __dirname")])])]),_._v(" "),l("li",[_._v("构建上下文环境\n"),l("ul",[l("li",[_._v("闭包产生作用域，通过 runInThisContext() 执行")]),_._v(" "),l("li",[_._v("将function 对象挂载到exports 对象上，并导出")])])])]),_._v(" "),l("h4",{attrs:{id:"加入缓存以及清除缓存"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#加入缓存以及清除缓存"}},[_._v("#")]),_._v(" 加入缓存以及清除缓存")]),_._v(" "),l("ul",[l("li",[_._v("核心模块\n"),l("ul",[l("li",[_._v("登记在 NativeModule._cache 上")])])]),_._v(" "),l("li",[_._v("文件模块\n"),l("ul",[l("li",[_._v("封装后的方法以字符串形式存储，等待调用")])])]),_._v(" "),l("li",[_._v("清除缓存\n"),l("ul",[l("li",[_._v("通过delete require.cache[require.resolve(module)]")])])])]),_._v(" "),l("h4",{attrs:{id:"require-vs-import"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#require-vs-import"}},[_._v("#")]),_._v(" require vs import")]),_._v(" "),l("ul",[l("li",[_._v("import\n"),l("ul",[l("li",[_._v("ES6的规范")]),_._v(" "),l("li",[_._v("静态加载模块")]),_._v(" "),l("li",[_._v("编译的时候执行代码")]),_._v(" "),l("li",[_._v("缓存执行结果")]),_._v(" "),l("li",[_._v("按需引入，节省内存")])])]),_._v(" "),l("li",[_._v("require\n"),l("ul",[l("li",[_._v("commonJS规范")]),_._v(" "),l("li",[_._v("动态加载模块")]),_._v(" "),l("li",[_._v("调用的时候加载源码")]),_._v(" "),l("li",[_._v("加载全部代码")])])])]),_._v(" "),l("h2",{attrs:{id:""}},[l("a",{staticClass:"header-anchor",attrs:{href:"#"}},[_._v("#")])])])}),[],!1,null,null,null);v.default=e.exports}}]);