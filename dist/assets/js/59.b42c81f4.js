(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{423:function(t,a,s){"use strict";s.r(a);var r=s(22),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"node-js-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js-数据类型"}},[t._v("#")]),t._v(" Node.js 数据类型")]),t._v(" "),s("h3",{attrs:{id:"_1-buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-buffer"}},[t._v("#")]),t._v(" 1. Buffer")]),t._v(" "),s("ul",[s("li",[t._v("流式数据（非一次性加载完成的数据）由于产生和使用不一定同速，所以需要缓存区")])]),t._v(" "),s("ul",[s("li",[t._v("寸尺需要临时占用大量内存的数据，内存中开辟的一片区域，用于存放二进制数据")]),t._v(" "),s("li",[t._v("流的生产者于消费者之间的速度通常是不一致的，因此需要buffer来暂存一些数据")]),t._v(" "),s("li",[t._v("buffer大小通过highWaterMark参数指定，默认情况是16kB")])]),t._v(" "),s("h4",{attrs:{id:"创建buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建buffer"}},[t._v("#")]),t._v(" 创建Buffer")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 使用 堆外内存 新增buffer\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 浅拷贝 arrayBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 共享内存\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 分配一个指定大小的 Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 默认填"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("，使用"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("编码\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocUnsafe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 分配一个未初始化的Buffer\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 流式数据会 自动创建 Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 手动创建 Buffer 需谨慎\n")])])]),s("h4",{attrs:{id:"创建buffer-坑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建buffer-坑"}},[t._v("#")]),t._v(" 创建Buffer - 坑")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1. 预分配一个内部大小为Buffer.poolSize(8K)的 Buffer 实例，作为快速分配的内存池\n2. 如果allocUnsafe/from(array) 的 size 小于4K，则从预分配的池子中分配\n1. 绕开V8回收机制，使用专用回收机制，提高性能和内存使用效率\n2. 但这种玩法会导致未初始化的数据块投入使用，造成数据泄露风险\n")])])]),s("h4",{attrs:{id:"使用buffer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用buffer"}},[t._v("#")]),t._v(" 使用buffer")]),t._v(" "),s("ul",[s("li",[t._v("转换格式\n"),s("ul",[s("li",[t._v("字符串：编码Buffer.from(string)，解码buf.toString()")]),t._v(" "),s("li",[t._v("JSON：buf.toJSON()")])])]),t._v(" "),s("li",[t._v("剪裁和拼接\n"),s("ul",[s("li",[t._v("剪裁：Buffer.slice() 表现与 Array.slice() 不同，返回Buffer 与原buf 共享内存")]),t._v(" "),s("li",[t._v("拼接：buf.copy/buf.concat 返回新的Buffer")])])]),t._v(" "),s("li",[t._v("比较和遍历索引\n"),s("ul",[s("li",[t._v("判断相等：buf1.equals(buf2) 比较的是二进制的值")]),t._v(" "),s("li",[t._v("索引：使用buf[index]形式进行索引，for...of/indexOf/includes 等Array方法也可以使用")])])])]),t._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"_2-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-stream"}},[t._v("#")]),t._v(" 2. Stream")]),t._v(" "),s("ul",[s("li",[t._v("Stream 模块提供的是"),s("strong",[t._v("抽象接口")]),t._v("，有很多模块实现了这个接口")])]),t._v(" "),s("ul",[s("li",[t._v("Stream 就是解决生产者和消费者问题的 一种方式， "),s("strong",[t._v("解决异步IO问题")])]),t._v(" "),s("li",[t._v("Stream 模块对于流的使用者而言无需关心 "),s("strong",[t._v("readableSrc.pipe(writableDest)")])])]),t._v(" "),s("h3",{attrs:{id:"_3-event-eventemitter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-event-eventemitter"}},[t._v("#")]),t._v(" 3. Event/EventEmitter")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" EventEmitters --\x3e Event (会进行event loop) --\x3e Event Handlers\n")])])]),s("h3",{attrs:{id:"_4-error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-error"}},[t._v("#")]),t._v(" 4. Error")]),t._v(" "),s("h4",{attrs:{id:"错误种类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误种类"}},[t._v("#")]),t._v(" "),s("strong",[t._v("错误种类")])]),t._v(" "),s("ul",[s("li",[t._v("标准的JavaScript错误，比如："),s("strong",[t._v("SyntaxError / ReferenceError")])]),t._v(" "),s("li",[t._v("底层操作触发的系统错误，比如："),s("strong",[t._v("文件读写")])]),t._v(" "),s("li",[t._v("用户自定义错误")]),t._v(" "),s("li",[t._v("异常逻辑触发的AssertionError，通常来自assert模块")])]),t._v(" "),s("h4",{attrs:{id:"错误冒泡和捕获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误冒泡和捕获"}},[t._v("#")]),t._v(" "),s("strong",[t._v("错误冒泡和捕获")])]),t._v(" "),s("ul",[s("li",[t._v("所有通过Node.js或JavaScript运行时抛出的异常都是Error实例")]),t._v(" "),s("li",[t._v("大多数的异步方法都接受一个callback函数，该函数会接收一个Error对象传入作为第一个参数")])]),t._v(" "),s("p",[s("strong",[t._v("好好读一下Node.js内置的错误信息，通常是见文知意，例如：ERR_ARG_NOT_ITERABLE")])]),t._v(" "),s("h3",{attrs:{id:"_5-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-url"}},[t._v("#")]),t._v(" 5. URL")]),t._v(" "),s("ul",[s("li",[t._v("弃用urlObjects，改用WHATWGURL")]),t._v(" "),s("li",[t._v("使用URLSearchParams操作参数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromEntries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URLSearchParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo=bar & baz = qux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {foo: 'bar', baz: 'qux'}")]),t._v("\n\nurl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pathname\nurl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query\nQuerystring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'params2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"_6-全局变量-global"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-全局变量-global"}},[t._v("#")]),t._v(" 6. 全局变量 - global")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("看上去像是全局变量的 存在，实际上仅存在于模块的作用域中")]),t._v(" "),s("ul",[s("li",[t._v("__dirname")]),t._v(" "),s("li",[t._v("__filename")]),t._v(" "),s("li",[t._v("exports")]),t._v(" "),s("li",[t._v("module")]),t._v(" "),s("li",[t._v("require()")])])]),t._v(" "),s("li",[s("strong",[t._v("从JavaScript继承而来的全局变量")]),t._v(" "),s("ul",[s("li",[t._v("console")]),t._v(" "),s("li",[t._v("timer 全家桶")]),t._v(" "),s("li",[t._v("global (容器)")])])]),t._v(" "),s("li",[s("strong",[t._v("Node.js特有的全局变量")]),t._v(" "),s("ul",[s("li",[t._v("Buffer")]),t._v(" "),s("li",[t._v("process")]),t._v(" "),s("li",[t._v("URL")]),t._v(" "),s("li",[t._v("WebAssembly")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);